# 1_generate_keys.py
from cryptography.hazmat.primitives.asymmetric import rsa
from cryptography.hazmat.primitives import serialization

# Nh·∫≠p chu·ªói ti·∫øng Vi·ªát l√†m kh√≥a g·ªëc
text_key = input("Nh·∫≠p chu·ªói b·∫•t k·ª≥ (d√πng l√†m 'b√≠ danh'): ")

# Sinh kh√≥a RSA m·ªõi
private_key = rsa.generate_private_key(public_exponent=65537, key_size=2048)
public_key = private_key.public_key()

# Chuy·ªÉn sang ƒë·ªãnh d·∫°ng PEM (text)
private_pem = private_key.private_bytes(
    encoding=serialization.Encoding.PEM,
    format=serialization.PrivateFormat.TraditionalOpenSSL,
    encryption_algorithm=serialization.NoEncryption()
)

public_pem = public_key.public_bytes(
    encoding=serialization.Encoding.PEM,
    format=serialization.PublicFormat.SubjectPublicKeyInfo
)

# In ra m√†n h√¨nh
print("\nüîê PRIVATE KEY (PEM):\n")
print(private_pem.decode())

print("üîì PUBLIC KEY (PEM):\n")
print(public_pem.decode())
